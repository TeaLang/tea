#!/usr/bin/env php
<?php
/**
 * This file is part of the Tea programming language project
 *
 * @author 		Benny <benny@meetdreams.com>
 * @copyright 	(c)2019 YJ Technology Ltd. [http://tealang.org]
 * For the full copyright and license information, please view the LICENSE file that was distributed with this source code.
 */

/// The complier script for the Tea programming language

namespace Tea;

define('BASE_PATH', dirname(__DIR__) . '/');
define('LOG_PATH', BASE_PATH . 'log/');

require BASE_PATH . 'compiler/__public.php';

// stats start
UsageTracer::start();

const DEBUG = true;

const KEY_INIT = 'init';
const OPTION_KEYS = [KEY_INIT];

const USAGE = 'Usage: tea tea/tests/syntax
Usage: tea --init myproject/hello';

try {
	$opts = process_cli_options($argv, OPTION_KEYS);

	$target = $opts[0] ?? null;
	if ($target === null) {
		error("Missed target for compile.");
		halt(USAGE);
	}

	// init
	if (isset($opts[KEY_INIT])) {
		$init = new TeaInitializer($target);
		$init->process();
		halt("Init '$target' success.");
	}

	// compile
	$realpath = realpath($target);
	if ($realpath === false) {
		error("Target '{$target}' not found.");
		halt(USAGE);
	}

	if (!is_dir($realpath)) {
		throw new Exception("The target path '{$realpath}' is not a valid Unit directory.");
	}

	echo LF;
	$realpath = FileHelper::normalize_path($realpath . DS);
	$compiler = new Compiler($realpath);
	$count = $compiler->make();

	echo "\n$count programs compiled.\n\n";
}
catch (\Exception $e) {
	halt(LF . $e->getMessage());
	// echo $e->getTraceAsString(), LF, LF;
}

// stats end
echo join("\t", UsageTracer::end()), LF;

// end
