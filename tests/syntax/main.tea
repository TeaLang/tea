
internal TeaDemoClass {
	static static_prop1 = 'static prop value'

	prop1 = 'prop1 value'

	static static_method(some Dict) {
		// some['k'] = 123   // error, cannot change a immutable item
		return this.static_prop1
	}

	method1(param1 String) {
		return this.prop1
	}

	method2() String {
		return 'some'
	}
}

var caller = 'The caller in main.tea'

echo "\n***Test for call with mixed programming:"
result1 = PHPClassInMixed1(caller).get_message()
result2 = php_get_num() + 1
var_dump(result1, result2)

echo "\n***Test for class call:"
var php_class_demo_object = PHPClassDemo()
echo php_class_demo_object.get_class_name('main1')
var methods = php_class_demo_object.get_target_class_methods(TeaDemoClass)
var_dump(methods)

php_function_demo('hei~')
var_dump(PHP_CONST_DEMO)

echo "\n***Test for range:"
var items = range(0, 9, 2)
var_dump(items)

echo "\n***Test for include:"
var title = 'include from main1.tea' // used in included file
result = #include('expect')
var_dump(result)

echo "\n***Test for int/uint cast:"
echo "'-123abc' cast to int: ", '-123abc'::Int // -123
// echo "'-123abc' cast to uint: ", '-123abc'::UInt  // error
