
#main

public fn0(str) {
	echo str
}

var a_function = fn0
a_function('some')

internal fn1(callee Callable) {
	var unknow_type_value Any = callee('hei')
}

fn1(fn0)
fn1((str) => fn0(str))

// internal fn2(some Any) String -> done(caller String) String -> error(message) Void {
// 	if done {
// 		return done('A cool man')
// 	}
// 	elseif error {
// 		error('Error!')
// 	}
// 	else {
// 		return 'No any callbacks implemented.'
// 	}
// }

// echo fn2('any...') -> done(caller String) {
// 	return "$caller has called!"
// }

internal fn3(some Any, done (caller String) String, error (message) = none) String {
	return done('A cool man') concat ' with $some'
}

echo fn3(123, done: (a) => {
		return a concat ' has called'
	}, error: (error) => {})

echo fn3('any...') -> done(caller String) {
	return "$caller has called!"
}
