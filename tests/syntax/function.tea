
#main

public fn0(str) {
	echo str
}

var a_function = fn0
a_function('some')

internal fn1(callee Callable) {
	var unknow_type_value Any = callee('hei')
}

fn1(fn0)
fn1((str) => fn0(str))

internal fn2(arg0) String -> callback0(caller String) String -> callback1(message) Void {
	if callback0 {
		return callback0('A cool man')
	}
	elseif callback1 {
		callback1('Error!')
	}
	else {
		return 'No any callbacks implemented.'
	}
}

echo fn2('any...') -> callback0(caller String) {
	return "$caller has called!"
}

internal fn3(arg0, callback0 (a String, b Int) String) {
	echo callback0('A cool man', 0)
}

fn3(123, (a, b) => {
	return a concat b
})
