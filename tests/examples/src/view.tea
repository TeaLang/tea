internal intertrait IBaseView {
	protected attributes String.Dict = [:]
	protected subitems String.Array = []  // infered to Any.Array

	construct(id String = none) {
		if id is String {
			this.attributes['id'] = id
		}
	}

	add_subitem(item String) {
		this.subitems[] = item
	}

	set_attribute(key String, value String) {
		if not /^[a-z][a-z0-9]*$/i.test(key) {
			throw Exception("Invalid key '${key}'")
		}

		this.attributes[key] = value
	}

	render() XView {
		return <view {this.attributes}>
			${this.subitems.join("\n")}
		</view>
	}

	__tostring() String {
		return this.render()
	}
}

public ListView: IBaseView {
	get_subviews() {
		return this.subitems.map((item String) => {
			return <li>{item}</li>
		})
	}

	render() XView {
		return <ul {this.attributes}>
			${this.get_subviews().join("\n\t")}
		</ul>
	}
}

list = ListView('demo')
list.add_subitem('A simple text title')
list.add_subitem('A title has HTML chars <x>')
echo list
