#main

#php func imagecreatetruecolor(width Int, height Int) Any
#php func imagecolorallocatealpha(image, r Int, g Int, b Int, a Int) Int
#php func imagefill(image, x Int, y Int, color Int) Bool
#php func imagerotate(image, angle Float, background_color Int) Any
#php func imagesx(image) Int
#php func imagesy(image) Int
#php func imagettfbbox(size Float, angle Float, fontfile String, text String) Int.Array
#php func imagettftext(image, size Float, angle Float, x Int, y Int, color Int, fontfile String, text String) Int.Array
#php func imagepng(image, to String = none, quality = -1, filters Int = #default) Bool
#php func imagedestroy(image)

internal draw_text(image, text String, size UInt, color Int, fontfile String, h_offset Int = 0, is_handstand Bool = false) {
	w = imagesx(image)
	h = imagesy(image)

	angle = is_handstand ? 180 : 0

	bbox = imagettfbbox(size, angle, fontfile, text)
	dx = bbox[2] + bbox[0]
	dy = abs(bbox[5] + bbox[1])

	var center
	if is_handstand {
		center = (h - dy) / 2
	}
	else {
		center = (h + dy) / 2
	}

	imagettftext(image, size, angle, ((w - dx) / 2)#Int, center#Int + h_offset, color, fontfile, text)
}

internal BOX_WIDTH = 629

var tmp_path = dirname(__DIR__, 2) concat '/tmp/'
var fontfile = tmp_path concat 'SourceHanSansSC-Regular.otf'
if not file_exists(fontfile) {
	echo "The font file '$fontfile' not found.\nPlease download it and put to path $fontfile"
	exit
}

// create the background box
var image = imagecreatetruecolor(BOX_WIDTH, BOX_WIDTH)

// colors
var non_color = imagecolorallocatealpha(image, 0, 0, 0, 127)
var black = imagecolorallocatealpha(image, 0, 0, 0, 0)
var red = imagecolorallocatealpha(image, 255, 0, 0, 0)

// transposition
imagefill(image, 0, 0, red)
image = imagerotate(image, 45, non_color)

// draw the contents
draw_text(image, '春', 310, black, fontfile, 0)
draw_text(image, '新春快乐', 30, black, fontfile, 270)
draw_text(image, 'Tea语言', 12, black, fontfile, 330)

// save the target image
var target_image_file = tmp_path concat 'chun.png'
result = imagepng(image, target_image_file)
imagedestroy(image)

if result {
	echo 'Image $target_image_file generated.'
}
else {
	echo 'Image $target_image_file generate failure.'
}

